# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run CI
# Runs CI on Pull Requests for libraries affected by PR

on: pull_request

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  pre-check:
    permissions:
      contents: read  # for dorny/paths-filter to fetch a list of changed files
      pull-requests: read  # for dorny/paths-filter to read pull requests
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'packages' output variable
      packages: ${{ steps.lib-filter.outputs.changes }}

    steps:
      - uses: dorny/paths-filter@v2
        id: lib-filter
        with:
          # &common and &browser are YAML anchors
          # *common and *browser references previously defined anchor
          # browser/node filter will match any path under common as well as their own
          # angular/react filter will match any path under common and browser as well as their own
          filters: |
            msal-common: &common
              - 'lib/msal-common/**/**.!(md)'
              - '.github/workflows/build-test-pr.yml'
              - '.github/workflows/ci-template.yml'
            msal-browser: &browser
              - *common
              - 'lib/msal-browser/**/**.!(md)'
            msal-node:
              - *common
              - 'lib/msal-node/**/**.!(md)'
            msal-angular:
              - *browser
              - 'lib/msal-angular/**/**.!(md)'
            msal-react:
              - *browser
              - 'lib/msal-react/**/**.!(md)'
            msal-node-extensions:
              - *common
              - 'extensions/msal-node-extensions/**/**.!(md)'

  ci-msal-common:
    name: msal-common
    needs: pre-check
    uses: ./.github/workflows/ci-template.yml
    with:
      path: 'lib'
      lib-name: 'msal-common'
      should-run: ${{ contains(fromJSON(needs.pre-check.outputs.packages), 'msal-common') }}

  ci-msal-browser:
    name: msal-browser
    needs: pre-check
    uses: ./.github/workflows/ci-template.yml
    with:
      path: 'lib'
      lib-name: 'msal-browser'
      should-run: ${{ contains(fromJSON(needs.pre-check.outputs.packages), 'msal-browser') }}

  ci-msal-node:
    name: msal-node
    needs: pre-check
    uses: ./.github/workflows/ci-template.yml
    with:
      path: 'lib'
      lib-name: 'msal-node'
      should-run: ${{ contains(fromJSON(needs.pre-check.outputs.packages), 'msal-node') }}

  ci-msal-angular:
    name: msal-angular
    needs: pre-check
    uses: ./.github/workflows/ci-template.yml
    with:
      path: 'lib'
      lib-name: 'msal-angular'
      should-run: ${{ contains(fromJSON(needs.pre-check.outputs.packages), 'msal-angular') }}

  ci-msal-react:
    name: msal-react
    needs: pre-check
    uses: ./.github/workflows/ci-template.yml
    with:
      path: 'lib'
      lib-name: 'msal-react'
      should-run: ${{ contains(fromJSON(needs.pre-check.outputs.packages), 'msal-react') }}

  ci-msal-node-extensions:
    name: msal-node-extensions
    needs: pre-check
    uses: ./.github/workflows/ci-template.yml
    with:
      path: 'extensions'
      lib-name: 'msal-node-extensions'
      os: 'windows-latest'
      should-run: ${{ contains(fromJSON(needs.pre-check.outputs.packages), 'msal-node-extensions') }}
